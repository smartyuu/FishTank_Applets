{
  "version": 3,
  "sources": ["../../node_modules/echarts/lib/chart/line/LineSeries.js", "../../node_modules/echarts/lib/chart/line/helper.js", "../../node_modules/echarts/lib/chart/line/lineAnimationDiff.js", "../../node_modules/echarts/lib/chart/line/poly.js", "../../node_modules/echarts/lib/chart/helper/createClipPathFromCoordSys.js", "../../node_modules/echarts/lib/chart/line/LineView.js", "../../node_modules/echarts/lib/layout/points.js", "../../node_modules/echarts/lib/processor/dataSample.js", "../../node_modules/echarts/lib/chart/line/install.js"],
  "sourcesContent": ["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport createSeriesData from '../helper/createSeriesData.js';\r\nimport SeriesModel from '../../model/Series.js';\r\nimport { createSymbol } from '../../util/symbol.js';\r\nimport { Group } from '../../util/graphic.js';\r\n\r\nvar LineSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LineSeriesModel, _super);\r\n\r\n  function LineSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = LineSeriesModel.type;\r\n    _this.hasSymbolVisual = true;\r\n    return _this;\r\n  }\r\n\r\n  LineSeriesModel.prototype.getInitialData = function (option) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      var coordSys = option.coordinateSystem;\r\n\r\n      if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\r\n        throw new Error('Line not support coordinateSystem besides cartesian and polar');\r\n      }\r\n    }\r\n\r\n    return createSeriesData(null, this, {\r\n      useEncodeDefaulter: true\r\n    });\r\n  };\r\n\r\n  LineSeriesModel.prototype.getLegendIcon = function (opt) {\r\n    var group = new Group();\r\n    var line = createSymbol('line', 0, opt.itemHeight / 2, opt.itemWidth, 0, opt.lineStyle.stroke, false);\r\n    group.add(line);\r\n    line.setStyle(opt.lineStyle);\r\n    var visualType = this.getData().getVisual('symbol');\r\n    var visualRotate = this.getData().getVisual('symbolRotate');\r\n    var symbolType = visualType === 'none' ? 'circle' : visualType; // Symbol size is 80% when there is a line\r\n\r\n    var size = opt.itemHeight * 0.8;\r\n    var symbol = createSymbol(symbolType, (opt.itemWidth - size) / 2, (opt.itemHeight - size) / 2, size, size, opt.itemStyle.fill);\r\n    group.add(symbol);\r\n    symbol.setStyle(opt.itemStyle);\r\n    var symbolRotate = opt.iconRotate === 'inherit' ? visualRotate : opt.iconRotate || 0;\r\n    symbol.rotation = symbolRotate * Math.PI / 180;\r\n    symbol.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\r\n\r\n    if (symbolType.indexOf('empty') > -1) {\r\n      symbol.style.stroke = symbol.style.fill;\r\n      symbol.style.fill = '#fff';\r\n      symbol.style.lineWidth = 2;\r\n    }\r\n\r\n    return group;\r\n  };\r\n\r\n  LineSeriesModel.type = 'series.line';\r\n  LineSeriesModel.dependencies = ['grid', 'polar'];\r\n  LineSeriesModel.defaultOption = {\r\n    // zlevel: 0,\r\n    z: 3,\r\n    coordinateSystem: 'cartesian2d',\r\n    legendHoverLink: true,\r\n    clip: true,\r\n    label: {\r\n      position: 'top'\r\n    },\r\n    // itemStyle: {\r\n    // },\r\n    endLabel: {\r\n      show: false,\r\n      valueAnimation: true,\r\n      distance: 8\r\n    },\r\n    lineStyle: {\r\n      width: 2,\r\n      type: 'solid'\r\n    },\r\n    emphasis: {\r\n      scale: true\r\n    },\r\n    // areaStyle: {\r\n    // origin of areaStyle. Valid values:\r\n    // `'auto'/null/undefined`: from axisLine to data\r\n    // `'start'`: from min to data\r\n    // `'end'`: from data to max\r\n    // origin: 'auto'\r\n    // },\r\n    // false, 'start', 'end', 'middle'\r\n    step: false,\r\n    // Disabled if step is true\r\n    smooth: false,\r\n    smoothMonotone: null,\r\n    symbol: 'emptyCircle',\r\n    symbolSize: 4,\r\n    symbolRotate: null,\r\n    showSymbol: true,\r\n    // `false`: follow the label interval strategy.\r\n    // `true`: show all symbols.\r\n    // `'auto'`: If possible, show all symbols, otherwise\r\n    //           follow the label interval strategy.\r\n    showAllSymbol: 'auto',\r\n    // Whether to connect break point.\r\n    connectNulls: false,\r\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum', 'lttb'.\r\n    sampling: 'none',\r\n    animationEasing: 'linear',\r\n    // Disable progressive\r\n    progressive: 0,\r\n    hoverLayerThreshold: Infinity,\r\n    universalTransition: {\r\n      divideShape: 'clone'\r\n    },\r\n    triggerLineEvent: false\r\n  };\r\n  return LineSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default LineSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { isDimensionStacked } from '../../data/helper/dataStackHelper.js';\r\nimport { isNumber, map } from 'zrender/lib/core/util.js';\r\nexport function prepareDataCoordInfo(coordSys, data, valueOrigin) {\r\n  var baseAxis = coordSys.getBaseAxis();\r\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n  var valueStart = getValueStart(valueAxis, valueOrigin);\r\n  var baseAxisDim = baseAxis.dim;\r\n  var valueAxisDim = valueAxis.dim;\r\n  var valueDim = data.mapDimension(valueAxisDim);\r\n  var baseDim = data.mapDimension(baseAxisDim);\r\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\r\n  var dims = map(coordSys.dimensions, function (coordDim) {\r\n    return data.mapDimension(coordDim);\r\n  });\r\n  var stacked = false;\r\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\r\n\r\n  if (isDimensionStacked(data, dims[0]\r\n  /* , dims[1] */\r\n  )) {\r\n    // jshint ignore:line\r\n    stacked = true;\r\n    dims[0] = stackResultDim;\r\n  }\r\n\r\n  if (isDimensionStacked(data, dims[1]\r\n  /* , dims[0] */\r\n  )) {\r\n    // jshint ignore:line\r\n    stacked = true;\r\n    dims[1] = stackResultDim;\r\n  }\r\n\r\n  return {\r\n    dataDimsForPoint: dims,\r\n    valueStart: valueStart,\r\n    valueAxisDim: valueAxisDim,\r\n    baseAxisDim: baseAxisDim,\r\n    stacked: !!stacked,\r\n    valueDim: valueDim,\r\n    baseDim: baseDim,\r\n    baseDataOffset: baseDataOffset,\r\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\r\n  };\r\n}\r\n\r\nfunction getValueStart(valueAxis, valueOrigin) {\r\n  var valueStart = 0;\r\n  var extent = valueAxis.scale.getExtent();\r\n\r\n  if (valueOrigin === 'start') {\r\n    valueStart = extent[0];\r\n  } else if (valueOrigin === 'end') {\r\n    valueStart = extent[1];\r\n  } // If origin is specified as a number, use it as\r\n  // valueStart directly\r\n  else if (isNumber(valueOrigin) && !isNaN(valueOrigin)) {\r\n      valueStart = valueOrigin;\r\n    } // auto\r\n    else {\r\n        // Both positive\r\n        if (extent[0] > 0) {\r\n          valueStart = extent[0];\r\n        } // Both negative\r\n        else if (extent[1] < 0) {\r\n            valueStart = extent[1];\r\n          } // If is one positive, and one negative, onZero shall be true\r\n\r\n      }\r\n\r\n  return valueStart;\r\n}\r\n\r\nexport function getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\r\n  var value = NaN;\r\n\r\n  if (dataCoordInfo.stacked) {\r\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\r\n  }\r\n\r\n  if (isNaN(value)) {\r\n    value = dataCoordInfo.valueStart;\r\n  }\r\n\r\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\r\n  var stackedData = [];\r\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\r\n  stackedData[1 - baseDataOffset] = value;\r\n  return coordSys.dataToPoint(stackedData);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper.js';\r\nimport { createFloat32Array } from '../../util/vendor.js';\r\n\r\nfunction diffData(oldData, newData) {\r\n  var diffResult = [];\r\n  newData.diff(oldData).add(function (idx) {\r\n    diffResult.push({\r\n      cmd: '+',\r\n      idx: idx\r\n    });\r\n  }).update(function (newIdx, oldIdx) {\r\n    diffResult.push({\r\n      cmd: '=',\r\n      idx: oldIdx,\r\n      idx1: newIdx\r\n    });\r\n  }).remove(function (idx) {\r\n    diffResult.push({\r\n      cmd: '-',\r\n      idx: idx\r\n    });\r\n  }).execute();\r\n  return diffResult;\r\n}\r\n\r\nexport default function lineAnimationDiff(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\r\n  var diff = diffData(oldData, newData); // let newIdList = newData.mapArray(newData.getId);\r\n  // let oldIdList = oldData.mapArray(oldData.getId);\r\n  // convertToIntId(newIdList, oldIdList);\r\n  // // FIXME One data ?\r\n  // diff = arrayDiff(oldIdList, newIdList);\r\n\r\n  var currPoints = [];\r\n  var nextPoints = []; // Points for stacking base line\r\n\r\n  var currStackedPoints = [];\r\n  var nextStackedPoints = [];\r\n  var status = [];\r\n  var sortedIndices = [];\r\n  var rawIndices = [];\r\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin); // const oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\r\n\r\n  var oldPoints = oldData.getLayout('points') || [];\r\n  var newPoints = newData.getLayout('points') || [];\r\n\r\n  for (var i = 0; i < diff.length; i++) {\r\n    var diffItem = diff[i];\r\n    var pointAdded = true;\r\n    var oldIdx2 = void 0;\r\n    var newIdx2 = void 0; // FIXME, animation is not so perfect when dataZoom window moves fast\r\n    // Which is in case remvoing or add more than one data in the tail or head\r\n\r\n    switch (diffItem.cmd) {\r\n      case '=':\r\n        oldIdx2 = diffItem.idx * 2;\r\n        newIdx2 = diffItem.idx1 * 2;\r\n        var currentX = oldPoints[oldIdx2];\r\n        var currentY = oldPoints[oldIdx2 + 1];\r\n        var nextX = newPoints[newIdx2];\r\n        var nextY = newPoints[newIdx2 + 1]; // If previous data is NaN, use next point directly\r\n\r\n        if (isNaN(currentX) || isNaN(currentY)) {\r\n          currentX = nextX;\r\n          currentY = nextY;\r\n        }\r\n\r\n        currPoints.push(currentX, currentY);\r\n        nextPoints.push(nextX, nextY);\r\n        currStackedPoints.push(oldStackedOnPoints[oldIdx2], oldStackedOnPoints[oldIdx2 + 1]);\r\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\r\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\r\n        break;\r\n\r\n      case '+':\r\n        var newIdx = diffItem.idx;\r\n        var newDataDimsForPoint = newDataOldCoordInfo.dataDimsForPoint;\r\n        var oldPt = oldCoordSys.dataToPoint([newData.get(newDataDimsForPoint[0], newIdx), newData.get(newDataDimsForPoint[1], newIdx)]);\r\n        newIdx2 = newIdx * 2;\r\n        currPoints.push(oldPt[0], oldPt[1]);\r\n        nextPoints.push(newPoints[newIdx2], newPoints[newIdx2 + 1]);\r\n        var stackedOnPoint = getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, newIdx);\r\n        currStackedPoints.push(stackedOnPoint[0], stackedOnPoint[1]);\r\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\r\n        rawIndices.push(newData.getRawIndex(newIdx));\r\n        break;\r\n\r\n      case '-':\r\n        pointAdded = false;\r\n    } // Original indices\r\n\r\n\r\n    if (pointAdded) {\r\n      status.push(diffItem);\r\n      sortedIndices.push(sortedIndices.length);\r\n    }\r\n  } // Diff result may be crossed if all items are changed\r\n  // Sort by data index\r\n\r\n\r\n  sortedIndices.sort(function (a, b) {\r\n    return rawIndices[a] - rawIndices[b];\r\n  });\r\n  var len = currPoints.length;\r\n  var sortedCurrPoints = createFloat32Array(len);\r\n  var sortedNextPoints = createFloat32Array(len);\r\n  var sortedCurrStackedPoints = createFloat32Array(len);\r\n  var sortedNextStackedPoints = createFloat32Array(len);\r\n  var sortedStatus = [];\r\n\r\n  for (var i = 0; i < sortedIndices.length; i++) {\r\n    var idx = sortedIndices[i];\r\n    var i2 = i * 2;\r\n    var idx2 = idx * 2;\r\n    sortedCurrPoints[i2] = currPoints[idx2];\r\n    sortedCurrPoints[i2 + 1] = currPoints[idx2 + 1];\r\n    sortedNextPoints[i2] = nextPoints[idx2];\r\n    sortedNextPoints[i2 + 1] = nextPoints[idx2 + 1];\r\n    sortedCurrStackedPoints[i2] = currStackedPoints[idx2];\r\n    sortedCurrStackedPoints[i2 + 1] = currStackedPoints[idx2 + 1];\r\n    sortedNextStackedPoints[i2] = nextStackedPoints[idx2];\r\n    sortedNextStackedPoints[i2 + 1] = nextStackedPoints[idx2 + 1];\r\n    sortedStatus[i] = status[idx];\r\n  }\r\n\r\n  return {\r\n    current: sortedCurrPoints,\r\n    next: sortedNextPoints,\r\n    stackedOnCurrent: sortedCurrStackedPoints,\r\n    stackedOnNext: sortedNextStackedPoints,\r\n    status: sortedStatus\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\"; // Poly path support NaN point\r\n\r\nimport Path from 'zrender/lib/graphic/Path.js';\r\nimport PathProxy from 'zrender/lib/core/PathProxy.js';\r\nimport { cubicRootAt, cubicAt } from 'zrender/lib/core/curve.js';\r\nvar mathMin = Math.min;\r\nvar mathMax = Math.max;\r\n\r\nfunction isPointNull(x, y) {\r\n  return isNaN(x) || isNaN(y);\r\n}\r\n/**\r\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\r\n * situations. This should be used when points are non-monotone neither in x or\r\n * y dimension.\r\n */\r\n\r\n\r\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smooth, smoothMonotone, connectNulls) {\r\n  var prevX;\r\n  var prevY;\r\n  var cpx0;\r\n  var cpy0;\r\n  var cpx1;\r\n  var cpy1;\r\n  var idx = start;\r\n  var k = 0;\r\n\r\n  for (; k < segLen; k++) {\r\n    var x = points[idx * 2];\r\n    var y = points[idx * 2 + 1];\r\n\r\n    if (idx >= allLen || idx < 0) {\r\n      break;\r\n    }\r\n\r\n    if (isPointNull(x, y)) {\r\n      if (connectNulls) {\r\n        idx += dir;\r\n        continue;\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    if (idx === start) {\r\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](x, y);\r\n      cpx0 = x;\r\n      cpy0 = y;\r\n    } else {\r\n      var dx = x - prevX;\r\n      var dy = y - prevY; // Ignore tiny segment.\r\n\r\n      if (dx * dx + dy * dy < 0.5) {\r\n        idx += dir;\r\n        continue;\r\n      }\r\n\r\n      if (smooth > 0) {\r\n        var nextIdx = idx + dir;\r\n        var nextX = points[nextIdx * 2];\r\n        var nextY = points[nextIdx * 2 + 1]; // Ignore duplicate point\r\n\r\n        while (nextX === x && nextY === y && k < segLen) {\r\n          k++;\r\n          nextIdx += dir;\r\n          idx += dir;\r\n          nextX = points[nextIdx * 2];\r\n          nextY = points[nextIdx * 2 + 1];\r\n          x = points[idx * 2];\r\n          y = points[idx * 2 + 1];\r\n          dx = x - prevX;\r\n          dy = y - prevY;\r\n        }\r\n\r\n        var tmpK = k + 1;\r\n\r\n        if (connectNulls) {\r\n          // Find next point not null\r\n          while (isPointNull(nextX, nextY) && tmpK < segLen) {\r\n            tmpK++;\r\n            nextIdx += dir;\r\n            nextX = points[nextIdx * 2];\r\n            nextY = points[nextIdx * 2 + 1];\r\n          }\r\n        }\r\n\r\n        var ratioNextSeg = 0.5;\r\n        var vx = 0;\r\n        var vy = 0;\r\n        var nextCpx0 = void 0;\r\n        var nextCpy0 = void 0; // Is last point\r\n\r\n        if (tmpK >= segLen || isPointNull(nextX, nextY)) {\r\n          cpx1 = x;\r\n          cpy1 = y;\r\n        } else {\r\n          vx = nextX - prevX;\r\n          vy = nextY - prevY;\r\n          var dx0 = x - prevX;\r\n          var dx1 = nextX - x;\r\n          var dy0 = y - prevY;\r\n          var dy1 = nextY - y;\r\n          var lenPrevSeg = void 0;\r\n          var lenNextSeg = void 0;\r\n\r\n          if (smoothMonotone === 'x') {\r\n            lenPrevSeg = Math.abs(dx0);\r\n            lenNextSeg = Math.abs(dx1);\r\n            var dir_1 = vx > 0 ? 1 : -1;\r\n            cpx1 = x - dir_1 * lenPrevSeg * smooth;\r\n            cpy1 = y;\r\n            nextCpx0 = x + dir_1 * lenNextSeg * smooth;\r\n            nextCpy0 = y;\r\n          } else if (smoothMonotone === 'y') {\r\n            lenPrevSeg = Math.abs(dy0);\r\n            lenNextSeg = Math.abs(dy1);\r\n            var dir_2 = vy > 0 ? 1 : -1;\r\n            cpx1 = x;\r\n            cpy1 = y - dir_2 * lenPrevSeg * smooth;\r\n            nextCpx0 = x;\r\n            nextCpy0 = y + dir_2 * lenNextSeg * smooth;\r\n          } else {\r\n            lenPrevSeg = Math.sqrt(dx0 * dx0 + dy0 * dy0);\r\n            lenNextSeg = Math.sqrt(dx1 * dx1 + dy1 * dy1); // Use ratio of seg length\r\n\r\n            ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\r\n            cpx1 = x - vx * smooth * (1 - ratioNextSeg);\r\n            cpy1 = y - vy * smooth * (1 - ratioNextSeg); // cp0 of next segment\r\n\r\n            nextCpx0 = x + vx * smooth * ratioNextSeg;\r\n            nextCpy0 = y + vy * smooth * ratioNextSeg; // Smooth constraint between point and next point.\r\n            // Avoid exceeding extreme after smoothing.\r\n\r\n            nextCpx0 = mathMin(nextCpx0, mathMax(nextX, x));\r\n            nextCpy0 = mathMin(nextCpy0, mathMax(nextY, y));\r\n            nextCpx0 = mathMax(nextCpx0, mathMin(nextX, x));\r\n            nextCpy0 = mathMax(nextCpy0, mathMin(nextY, y)); // Reclaculate cp1 based on the adjusted cp0 of next seg.\r\n\r\n            vx = nextCpx0 - x;\r\n            vy = nextCpy0 - y;\r\n            cpx1 = x - vx * lenPrevSeg / lenNextSeg;\r\n            cpy1 = y - vy * lenPrevSeg / lenNextSeg; // Smooth constraint between point and prev point.\r\n            // Avoid exceeding extreme after smoothing.\r\n\r\n            cpx1 = mathMin(cpx1, mathMax(prevX, x));\r\n            cpy1 = mathMin(cpy1, mathMax(prevY, y));\r\n            cpx1 = mathMax(cpx1, mathMin(prevX, x));\r\n            cpy1 = mathMax(cpy1, mathMin(prevY, y)); // Adjust next cp0 again.\r\n\r\n            vx = x - cpx1;\r\n            vy = y - cpy1;\r\n            nextCpx0 = x + vx * lenNextSeg / lenPrevSeg;\r\n            nextCpy0 = y + vy * lenNextSeg / lenPrevSeg;\r\n          }\r\n        }\r\n\r\n        ctx.bezierCurveTo(cpx0, cpy0, cpx1, cpy1, x, y);\r\n        cpx0 = nextCpx0;\r\n        cpy0 = nextCpy0;\r\n      } else {\r\n        ctx.lineTo(x, y);\r\n      }\r\n    }\r\n\r\n    prevX = x;\r\n    prevY = y;\r\n    idx += dir;\r\n  }\r\n\r\n  return k;\r\n}\r\n\r\nvar ECPolylineShape =\r\n/** @class */\r\nfunction () {\r\n  function ECPolylineShape() {\r\n    this.smooth = 0;\r\n    this.smoothConstraint = true;\r\n  }\r\n\r\n  return ECPolylineShape;\r\n}();\r\n\r\nvar ECPolyline =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ECPolyline, _super);\r\n\r\n  function ECPolyline(opts) {\r\n    var _this = _super.call(this, opts) || this;\r\n\r\n    _this.type = 'ec-polyline';\r\n    return _this;\r\n  }\r\n\r\n  ECPolyline.prototype.getDefaultStyle = function () {\r\n    return {\r\n      stroke: '#000',\r\n      fill: null\r\n    };\r\n  };\r\n\r\n  ECPolyline.prototype.getDefaultShape = function () {\r\n    return new ECPolylineShape();\r\n  };\r\n\r\n  ECPolyline.prototype.buildPath = function (ctx, shape) {\r\n    var points = shape.points;\r\n    var i = 0;\r\n    var len = points.length / 2; // const result = getBoundingBox(points, shape.smoothConstraint);\r\n\r\n    if (shape.connectNulls) {\r\n      // Must remove first and last null values avoid draw error in polygon\r\n      for (; len > 0; len--) {\r\n        if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      for (; i < len; i++) {\r\n        if (!isPointNull(points[i * 2], points[i * 2 + 1])) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    while (i < len) {\r\n      i += drawSegment(ctx, points, i, len, len, 1, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\r\n    }\r\n  };\r\n\r\n  ECPolyline.prototype.getPointOn = function (xOrY, dim) {\r\n    if (!this.path) {\r\n      this.createPathProxy();\r\n      this.buildPath(this.path, this.shape);\r\n    }\r\n\r\n    var path = this.path;\r\n    var data = path.data;\r\n    var CMD = PathProxy.CMD;\r\n    var x0;\r\n    var y0;\r\n    var isDimX = dim === 'x';\r\n    var roots = [];\r\n\r\n    for (var i = 0; i < data.length;) {\r\n      var cmd = data[i++];\r\n      var x = void 0;\r\n      var y = void 0;\r\n      var x2 = void 0;\r\n      var y2 = void 0;\r\n      var x3 = void 0;\r\n      var y3 = void 0;\r\n      var t = void 0;\r\n\r\n      switch (cmd) {\r\n        case CMD.M:\r\n          x0 = data[i++];\r\n          y0 = data[i++];\r\n          break;\r\n\r\n        case CMD.L:\r\n          x = data[i++];\r\n          y = data[i++];\r\n          t = isDimX ? (xOrY - x0) / (x - x0) : (xOrY - y0) / (y - y0);\r\n\r\n          if (t <= 1 && t >= 0) {\r\n            var val = isDimX ? (y - y0) * t + y0 : (x - x0) * t + x0;\r\n            return isDimX ? [xOrY, val] : [val, xOrY];\r\n          }\r\n\r\n          x0 = x;\r\n          y0 = y;\r\n          break;\r\n\r\n        case CMD.C:\r\n          x = data[i++];\r\n          y = data[i++];\r\n          x2 = data[i++];\r\n          y2 = data[i++];\r\n          x3 = data[i++];\r\n          y3 = data[i++];\r\n          var nRoot = isDimX ? cubicRootAt(x0, x, x2, x3, xOrY, roots) : cubicRootAt(y0, y, y2, y3, xOrY, roots);\r\n\r\n          if (nRoot > 0) {\r\n            for (var i_1 = 0; i_1 < nRoot; i_1++) {\r\n              var t_1 = roots[i_1];\r\n\r\n              if (t_1 <= 1 && t_1 >= 0) {\r\n                var val = isDimX ? cubicAt(y0, y, y2, y3, t_1) : cubicAt(x0, x, x2, x3, t_1);\r\n                return isDimX ? [xOrY, val] : [val, xOrY];\r\n              }\r\n            }\r\n          }\r\n\r\n          x0 = x3;\r\n          y0 = y3;\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return ECPolyline;\r\n}(Path);\r\n\r\nexport { ECPolyline };\r\n\r\nvar ECPolygonShape =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ECPolygonShape, _super);\r\n\r\n  function ECPolygonShape() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  return ECPolygonShape;\r\n}(ECPolylineShape);\r\n\r\nvar ECPolygon =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ECPolygon, _super);\r\n\r\n  function ECPolygon(opts) {\r\n    var _this = _super.call(this, opts) || this;\r\n\r\n    _this.type = 'ec-polygon';\r\n    return _this;\r\n  }\r\n\r\n  ECPolygon.prototype.getDefaultShape = function () {\r\n    return new ECPolygonShape();\r\n  };\r\n\r\n  ECPolygon.prototype.buildPath = function (ctx, shape) {\r\n    var points = shape.points;\r\n    var stackedOnPoints = shape.stackedOnPoints;\r\n    var i = 0;\r\n    var len = points.length / 2;\r\n    var smoothMonotone = shape.smoothMonotone;\r\n\r\n    if (shape.connectNulls) {\r\n      // Must remove first and last null values avoid draw error in polygon\r\n      for (; len > 0; len--) {\r\n        if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      for (; i < len; i++) {\r\n        if (!isPointNull(points[i * 2], points[i * 2 + 1])) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    while (i < len) {\r\n      var k = drawSegment(ctx, points, i, len, len, 1, shape.smooth, smoothMonotone, shape.connectNulls);\r\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\r\n      i += k + 1;\r\n      ctx.closePath();\r\n    }\r\n  };\r\n\r\n  return ECPolygon;\r\n}(Path);\r\n\r\nexport { ECPolygon };", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as graphic from '../../util/graphic.js';\r\nimport { round } from '../../util/number.js';\r\nimport { isFunction } from 'zrender/lib/core/util.js';\r\n\r\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel, done, during) {\r\n  var rect = cartesian.getArea();\r\n  var x = rect.x;\r\n  var y = rect.y;\r\n  var width = rect.width;\r\n  var height = rect.height;\r\n  var lineWidth = seriesModel.get(['lineStyle', 'width']) || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\r\n\r\n  x -= lineWidth / 2;\r\n  y -= lineWidth / 2;\r\n  width += lineWidth;\r\n  height += lineWidth; // fix: https://github.com/apache/incubator-echarts/issues/11369\r\n\r\n  x = Math.floor(x);\r\n  width = Math.round(width);\r\n  var clipPath = new graphic.Rect({\r\n    shape: {\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n  });\r\n\r\n  if (hasAnimation) {\r\n    var baseAxis = cartesian.getBaseAxis();\r\n    var isHorizontal = baseAxis.isHorizontal();\r\n    var isAxisInversed = baseAxis.inverse;\r\n\r\n    if (isHorizontal) {\r\n      if (isAxisInversed) {\r\n        clipPath.shape.x += width;\r\n      }\r\n\r\n      clipPath.shape.width = 0;\r\n    } else {\r\n      if (!isAxisInversed) {\r\n        clipPath.shape.y += height;\r\n      }\r\n\r\n      clipPath.shape.height = 0;\r\n    }\r\n\r\n    var duringCb = isFunction(during) ? function (percent) {\r\n      during(percent, clipPath);\r\n    } : null;\r\n    graphic.initProps(clipPath, {\r\n      shape: {\r\n        width: width,\r\n        height: height,\r\n        x: x,\r\n        y: y\r\n      }\r\n    }, seriesModel, null, done, duringCb);\r\n  }\r\n\r\n  return clipPath;\r\n}\r\n\r\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\r\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\r\n\r\n  var r0 = round(sectorArea.r0, 1);\r\n  var r = round(sectorArea.r, 1);\r\n  var clipPath = new graphic.Sector({\r\n    shape: {\r\n      cx: round(polar.cx, 1),\r\n      cy: round(polar.cy, 1),\r\n      r0: r0,\r\n      r: r,\r\n      startAngle: sectorArea.startAngle,\r\n      endAngle: sectorArea.endAngle,\r\n      clockwise: sectorArea.clockwise\r\n    }\r\n  });\r\n\r\n  if (hasAnimation) {\r\n    var isRadial = polar.getBaseAxis().dim === 'angle';\r\n\r\n    if (isRadial) {\r\n      clipPath.shape.endAngle = sectorArea.startAngle;\r\n    } else {\r\n      clipPath.shape.r = r0;\r\n    }\r\n\r\n    graphic.initProps(clipPath, {\r\n      shape: {\r\n        endAngle: sectorArea.endAngle,\r\n        r: r\r\n      }\r\n    }, seriesModel);\r\n  }\r\n\r\n  return clipPath;\r\n}\r\n\r\nfunction createClipPath(coordSys, hasAnimation, seriesModel, done, during) {\r\n  if (!coordSys) {\r\n    return null;\r\n  } else if (coordSys.type === 'polar') {\r\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\r\n  } else if (coordSys.type === 'cartesian2d') {\r\n    return createGridClipPath(coordSys, hasAnimation, seriesModel, done, during);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createGridClipPath, createPolarClipPath, createClipPath };", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\"; // FIXME step not support polar\r\n\r\nimport * as zrUtil from 'zrender/lib/core/util.js';\r\nimport SymbolDraw from '../helper/SymbolDraw.js';\r\nimport SymbolClz from '../helper/Symbol.js';\r\nimport lineAnimationDiff from './lineAnimationDiff.js';\r\nimport * as graphic from '../../util/graphic.js';\r\nimport * as modelUtil from '../../util/model.js';\r\nimport { ECPolyline, ECPolygon } from './poly.js';\r\nimport ChartView from '../../view/Chart.js';\r\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper.js';\r\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys.js';\r\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\r\nimport { setStatesStylesFromModel, setStatesFlag, toggleHoverEmphasis, SPECIAL_STATES } from '../../util/states.js';\r\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle.js';\r\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper.js';\r\nimport { getECData } from '../../util/innerStore.js';\r\nimport { createFloat32Array } from '../../util/vendor.js';\r\nimport { convertToColorString } from '../../util/format.js';\r\nimport { lerp } from 'zrender/lib/tool/color.js';\r\n\r\nfunction isPointsSame(points1, points2) {\r\n  if (points1.length !== points2.length) {\r\n    return;\r\n  }\r\n\r\n  for (var i = 0; i < points1.length; i++) {\r\n    if (points1[i] !== points2[i]) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction bboxFromPoints(points) {\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var maxX = -Infinity;\r\n  var maxY = -Infinity;\r\n\r\n  for (var i = 0; i < points.length;) {\r\n    var x = points[i++];\r\n    var y = points[i++];\r\n\r\n    if (!isNaN(x)) {\r\n      minX = Math.min(x, minX);\r\n      maxX = Math.max(x, maxX);\r\n    }\r\n\r\n    if (!isNaN(y)) {\r\n      minY = Math.min(y, minY);\r\n      maxY = Math.max(y, maxY);\r\n    }\r\n  }\r\n\r\n  return [[minX, minY], [maxX, maxY]];\r\n}\r\n\r\nfunction getBoundingDiff(points1, points2) {\r\n  var _a = bboxFromPoints(points1),\r\n      min1 = _a[0],\r\n      max1 = _a[1];\r\n\r\n  var _b = bboxFromPoints(points2),\r\n      min2 = _b[0],\r\n      max2 = _b[1]; // Get a max value from each corner of two boundings.\r\n\r\n\r\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\r\n}\r\n\r\nfunction getSmooth(smooth) {\r\n  return zrUtil.isNumber(smooth) ? smooth : smooth ? 0.5 : 0;\r\n}\r\n\r\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\r\n  if (!dataCoordInfo.valueDim) {\r\n    return [];\r\n  }\r\n\r\n  var len = data.count();\r\n  var points = createFloat32Array(len * 2);\r\n\r\n  for (var idx = 0; idx < len; idx++) {\r\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\r\n    points[idx * 2] = pt[0];\r\n    points[idx * 2 + 1] = pt[1];\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt, connectNulls) {\r\n  var baseAxis = coordSys.getBaseAxis();\r\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\r\n  var stepPoints = [];\r\n  var i = 0;\r\n  var stepPt = [];\r\n  var pt = [];\r\n  var nextPt = [];\r\n  var filteredPoints = [];\r\n\r\n  if (connectNulls) {\r\n    for (i = 0; i < points.length; i += 2) {\r\n      if (!isNaN(points[i]) && !isNaN(points[i + 1])) {\r\n        filteredPoints.push(points[i], points[i + 1]);\r\n      }\r\n    }\r\n\r\n    points = filteredPoints;\r\n  }\r\n\r\n  for (i = 0; i < points.length - 2; i += 2) {\r\n    nextPt[0] = points[i + 2];\r\n    nextPt[1] = points[i + 3];\r\n    pt[0] = points[i];\r\n    pt[1] = points[i + 1];\r\n    stepPoints.push(pt[0], pt[1]);\r\n\r\n    switch (stepTurnAt) {\r\n      case 'end':\r\n        stepPt[baseIndex] = nextPt[baseIndex];\r\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\r\n        stepPoints.push(stepPt[0], stepPt[1]);\r\n        break;\r\n\r\n      case 'middle':\r\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\r\n        var stepPt2 = [];\r\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\r\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\r\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\r\n        stepPoints.push(stepPt[0], stepPt[1]);\r\n        stepPoints.push(stepPt2[0], stepPt2[1]);\r\n        break;\r\n\r\n      default:\r\n        // default is start\r\n        stepPt[baseIndex] = pt[baseIndex];\r\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\r\n        stepPoints.push(stepPt[0], stepPt[1]);\r\n    }\r\n  } // Last points\r\n\r\n\r\n  stepPoints.push(points[i++], points[i++]);\r\n  return stepPoints;\r\n}\r\n/**\r\n * Clip color stops to edge. Avoid creating too large gradients.\r\n * Which may lead to blurry when GPU acceleration is enabled. See #15680\r\n *\r\n * The stops has been sorted from small to large.\r\n */\r\n\r\n\r\nfunction clipColorStops(colorStops, maxSize) {\r\n  var newColorStops = [];\r\n  var len = colorStops.length; // coord will always < 0 in prevOutOfRangeColorStop.\r\n\r\n  var prevOutOfRangeColorStop;\r\n  var prevInRangeColorStop;\r\n\r\n  function lerpStop(stop0, stop1, clippedCoord) {\r\n    var coord0 = stop0.coord;\r\n    var p = (clippedCoord - coord0) / (stop1.coord - coord0);\r\n    var color = lerp(p, [stop0.color, stop1.color]);\r\n    return {\r\n      coord: clippedCoord,\r\n      color: color\r\n    };\r\n  }\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var stop_1 = colorStops[i];\r\n    var coord = stop_1.coord;\r\n\r\n    if (coord < 0) {\r\n      prevOutOfRangeColorStop = stop_1;\r\n    } else if (coord > maxSize) {\r\n      if (prevInRangeColorStop) {\r\n        newColorStops.push(lerpStop(prevInRangeColorStop, stop_1, maxSize));\r\n      } else if (prevOutOfRangeColorStop) {\r\n        // If there are two stops and coord range is between these two stops\r\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0), lerpStop(prevOutOfRangeColorStop, stop_1, maxSize));\r\n      } // All following stop will be out of range. So just ignore them.\r\n\r\n\r\n      break;\r\n    } else {\r\n      if (prevOutOfRangeColorStop) {\r\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0)); // Reset\r\n\r\n        prevOutOfRangeColorStop = null;\r\n      }\r\n\r\n      newColorStops.push(stop_1);\r\n      prevInRangeColorStop = stop_1;\r\n    }\r\n  }\r\n\r\n  return newColorStops;\r\n}\r\n\r\nfunction getVisualGradient(data, coordSys, api) {\r\n  var visualMetaList = data.getVisual('visualMeta');\r\n\r\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\r\n    // When data.count() is 0, gradient range can not be calculated.\r\n    return;\r\n  }\r\n\r\n  if (coordSys.type !== 'cartesian2d') {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      console.warn('Visual map on line style is only supported on cartesian2d.');\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  var coordDim;\r\n  var visualMeta;\r\n\r\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\r\n    var dimInfo = data.getDimensionInfo(visualMetaList[i].dimension);\r\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\r\n\r\n    if (coordDim === 'x' || coordDim === 'y') {\r\n      visualMeta = visualMetaList[i];\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!visualMeta) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      console.warn('Visual map on line style only support x or y dimension.');\r\n    }\r\n\r\n    return;\r\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\r\n  // the canvas spec prescribes that the color of the first stop and the last\r\n  // stop should be used. But if two stops are added at offset 0, in effect\r\n  // browsers use the color of the second stop to render area outside\r\n  // LinearGradient. So we can only infinitesimally extend area defined in\r\n  // LinearGradient to render `outerColors`.\r\n\r\n\r\n  var axis = coordSys.getAxis(coordDim); // dataToCoord mapping may not be linear, but must be monotonic.\r\n\r\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\r\n    // offset will be calculated later.\r\n    return {\r\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\r\n      color: stop.color\r\n    };\r\n  });\r\n  var stopLen = colorStops.length;\r\n  var outerColors = visualMeta.outerColors.slice();\r\n\r\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\r\n    colorStops.reverse();\r\n    outerColors.reverse();\r\n  }\r\n\r\n  var colorStopsInRange = clipColorStops(colorStops, coordDim === 'x' ? api.getWidth() : api.getHeight());\r\n  var inRangeStopLen = colorStopsInRange.length;\r\n\r\n  if (!inRangeStopLen && stopLen) {\r\n    // All stops are out of range. All will be the same color.\r\n    return colorStops[0].coord < 0 ? outerColors[1] ? outerColors[1] : colorStops[stopLen - 1].color : outerColors[0] ? outerColors[0] : colorStops[0].color;\r\n  }\r\n\r\n  var tinyExtent = 10; // Arbitrary value: 10px\r\n\r\n  var minCoord = colorStopsInRange[0].coord - tinyExtent;\r\n  var maxCoord = colorStopsInRange[inRangeStopLen - 1].coord + tinyExtent;\r\n  var coordSpan = maxCoord - minCoord;\r\n\r\n  if (coordSpan < 1e-3) {\r\n    return 'transparent';\r\n  }\r\n\r\n  zrUtil.each(colorStopsInRange, function (stop) {\r\n    stop.offset = (stop.coord - minCoord) / coordSpan;\r\n  });\r\n  colorStopsInRange.push({\r\n    // NOTE: inRangeStopLen may still be 0 if stoplen is zero.\r\n    offset: inRangeStopLen ? colorStopsInRange[inRangeStopLen - 1].offset : 0.5,\r\n    color: outerColors[1] || 'transparent'\r\n  });\r\n  colorStopsInRange.unshift({\r\n    offset: inRangeStopLen ? colorStopsInRange[0].offset : 0.5,\r\n    color: outerColors[0] || 'transparent'\r\n  });\r\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStopsInRange, true);\r\n  gradient[coordDim] = minCoord;\r\n  gradient[coordDim + '2'] = maxCoord;\r\n  return gradient;\r\n}\r\n\r\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\r\n  var showAllSymbol = seriesModel.get('showAllSymbol');\r\n  var isAuto = showAllSymbol === 'auto';\r\n\r\n  if (showAllSymbol && !isAuto) {\r\n    return;\r\n  }\r\n\r\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\r\n\r\n  if (!categoryAxis) {\r\n    return;\r\n  } // Note that category label interval strategy might bring some weird effect\r\n  // in some scenario: users may wonder why some of the symbols are not\r\n  // displayed. So we show all symbols as possible as we can.\r\n\r\n\r\n  if (isAuto // Simplify the logic, do not determine label overlap here.\r\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\r\n    return;\r\n  } // Otherwise follow the label interval strategy on category axis.\r\n\r\n\r\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\r\n  var labelMap = {};\r\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\r\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\r\n    labelMap[ordinalNumber] = 1;\r\n  });\r\n  return function (dataIndex) {\r\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\r\n  };\r\n}\r\n\r\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\r\n  // In most cases, line is monotonous on category axis, and the label size\r\n  // is close with each other. So we check the symbol size and some of the\r\n  // label size alone with the category axis to estimate whether all symbol\r\n  // can be shown without overlap.\r\n  var axisExtent = categoryAxis.getExtent();\r\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\r\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\r\n  // Sampling some points, max 5.\r\n\r\n  var dataLen = data.count();\r\n  var step = Math.max(1, Math.round(dataLen / 5));\r\n\r\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\r\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\r\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\r\n    * 1.5 > availSize) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction isPointNull(x, y) {\r\n  return isNaN(x) || isNaN(y);\r\n}\r\n\r\nfunction getLastIndexNotNull(points) {\r\n  var len = points.length / 2;\r\n\r\n  for (; len > 0; len--) {\r\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return len - 1;\r\n}\r\n\r\nfunction getPointAtIndex(points, idx) {\r\n  return [points[idx * 2], points[idx * 2 + 1]];\r\n}\r\n\r\nfunction getIndexRange(points, xOrY, dim) {\r\n  var len = points.length / 2;\r\n  var dimIdx = dim === 'x' ? 0 : 1;\r\n  var a;\r\n  var b;\r\n  var prevIndex = 0;\r\n  var nextIndex = -1;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    b = points[i * 2 + dimIdx];\r\n\r\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\r\n      continue;\r\n    }\r\n\r\n    if (i === 0) {\r\n      a = b;\r\n      continue;\r\n    }\r\n\r\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\r\n      nextIndex = i;\r\n      break;\r\n    }\r\n\r\n    prevIndex = i;\r\n    a = b;\r\n  }\r\n\r\n  return {\r\n    range: [prevIndex, nextIndex],\r\n    t: (xOrY - a) / (b - a)\r\n  };\r\n}\r\n\r\nfunction anyStateShowEndLabel(seriesModel) {\r\n  if (seriesModel.get(['endLabel', 'show'])) {\r\n    return true;\r\n  }\r\n\r\n  for (var i = 0; i < SPECIAL_STATES.length; i++) {\r\n    if (seriesModel.get([SPECIAL_STATES[i], 'endLabel', 'show'])) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\r\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\r\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\r\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\r\n    var data_1 = seriesModel.getData();\r\n    var labelAnimationRecord_1 = {\r\n      lastFrameIndex: 0\r\n    };\r\n    var during = anyStateShowEndLabel(seriesModel) ? function (percent, clipRect) {\r\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\r\n    } : null;\r\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\r\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\r\n      var endLabel = lineView._endLabel;\r\n\r\n      if (endLabel && hasAnimation) {\r\n        if (labelAnimationRecord_1.originalX != null) {\r\n          endLabel.attr({\r\n            x: labelAnimationRecord_1.originalX,\r\n            y: labelAnimationRecord_1.originalY\r\n          });\r\n        }\r\n      }\r\n    }, during); // Expand clip shape to avoid clipping when line value exceeds axis\r\n\r\n    if (!seriesModel.get('clip', true)) {\r\n      var rectShape = clipPath.shape;\r\n      var expandSize = Math.max(rectShape.width, rectShape.height);\r\n\r\n      if (isHorizontal) {\r\n        rectShape.y -= expandSize;\r\n        rectShape.height += expandSize * 2;\r\n      } else {\r\n        rectShape.x -= expandSize;\r\n        rectShape.width += expandSize * 2;\r\n      }\r\n    } // Set to the final frame. To make sure label layout is right.\r\n\r\n\r\n    if (during) {\r\n      during(1, clipPath);\r\n    }\r\n\r\n    return clipPath;\r\n  } else {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (seriesModel.get(['endLabel', 'show'])) {\r\n        console.warn('endLabel is not supported for lines in polar systems.');\r\n      }\r\n    }\r\n\r\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\r\n  }\r\n}\r\n\r\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\r\n  var baseAxis = coordSys.getBaseAxis();\r\n  var isHorizontal = baseAxis.isHorizontal();\r\n  var isBaseInversed = baseAxis.inverse;\r\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\r\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\r\n  return {\r\n    normal: {\r\n      align: endLabelModel.get('align') || align,\r\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\r\n    }\r\n  };\r\n}\r\n\r\nvar LineView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LineView, _super);\r\n\r\n  function LineView() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  LineView.prototype.init = function () {\r\n    var lineGroup = new graphic.Group();\r\n    var symbolDraw = new SymbolDraw();\r\n    this.group.add(symbolDraw.group);\r\n    this._symbolDraw = symbolDraw;\r\n    this._lineGroup = lineGroup;\r\n  };\r\n\r\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var _this = this;\r\n\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var lineStyleModel = seriesModel.getModel('lineStyle');\r\n    var areaStyleModel = seriesModel.getModel('areaStyle');\r\n    var points = data.getLayout('points') || [];\r\n    var isCoordSysPolar = coordSys.type === 'polar';\r\n    var prevCoordSys = this._coordSys;\r\n    var symbolDraw = this._symbolDraw;\r\n    var polyline = this._polyline;\r\n    var polygon = this._polygon;\r\n    var lineGroup = this._lineGroup;\r\n    var hasAnimation = !ecModel.ssr && seriesModel.isAnimationEnabled();\r\n    var isAreaChart = !areaStyleModel.isEmpty();\r\n    var valueOrigin = areaStyleModel.get('origin');\r\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\r\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\r\n    var showSymbol = seriesModel.get('showSymbol');\r\n    var connectNulls = seriesModel.get('connectNulls');\r\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\r\n\r\n    var oldData = this._data;\r\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\r\n      if (el.__temp) {\r\n        group.remove(el);\r\n        oldData.setItemGraphicEl(idx, null);\r\n      }\r\n    }); // Remove previous created symbols if showSymbol changed to false\r\n\r\n    if (!showSymbol) {\r\n      symbolDraw.remove();\r\n    }\r\n\r\n    group.add(lineGroup); // FIXME step not support polar\r\n\r\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\r\n    var clipShapeForSymbol;\r\n\r\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\r\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\r\n      // See #7913 and `test/dataZoom-clip.html`.\r\n\r\n      if (clipShapeForSymbol.width != null) {\r\n        clipShapeForSymbol.x -= 0.1;\r\n        clipShapeForSymbol.y -= 0.1;\r\n        clipShapeForSymbol.width += 0.2;\r\n        clipShapeForSymbol.height += 0.2;\r\n      } else if (clipShapeForSymbol.r0) {\r\n        clipShapeForSymbol.r0 -= 0.5;\r\n        clipShapeForSymbol.r += 0.5;\r\n      }\r\n    }\r\n\r\n    this._clipShapeForSymbol = clipShapeForSymbol;\r\n    var visualColor = getVisualGradient(data, coordSys, api) || data.getVisual('style')[data.getVisual('drawType')]; // Initialization animation or coordinate system changed\r\n\r\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\r\n      showSymbol && symbolDraw.updateData(data, {\r\n        isIgnore: isIgnoreFunc,\r\n        clipShape: clipShapeForSymbol,\r\n        disableAnimation: true,\r\n        getSymbolPoint: function (idx) {\r\n          return [points[idx * 2], points[idx * 2 + 1]];\r\n        }\r\n      });\r\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\r\n\r\n      if (step) {\r\n        // TODO If stacked series is not step\r\n        points = turnPointsIntoStep(points, coordSys, step, connectNulls);\r\n\r\n        if (stackedOnPoints) {\r\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\r\n        }\r\n      }\r\n\r\n      polyline = this._newPolyline(points);\r\n\r\n      if (isAreaChart) {\r\n        polygon = this._newPolygon(points, stackedOnPoints);\r\n      } // If areaStyle is removed\r\n      else if (polygon) {\r\n          lineGroup.remove(polygon);\r\n          polygon = this._polygon = null;\r\n        } // NOTE: Must update _endLabel before setClipPath.\r\n\r\n\r\n      if (!isCoordSysPolar) {\r\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\r\n      }\r\n\r\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\r\n    } else {\r\n      if (isAreaChart && !polygon) {\r\n        // If areaStyle is added\r\n        polygon = this._newPolygon(points, stackedOnPoints);\r\n      } else if (polygon && !isAreaChart) {\r\n        // If areaStyle is removed\r\n        lineGroup.remove(polygon);\r\n        polygon = this._polygon = null;\r\n      } // NOTE: Must update _endLabel before setClipPath.\r\n\r\n\r\n      if (!isCoordSysPolar) {\r\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\r\n      } // Update clipPath\r\n\r\n\r\n      var oldClipPath = lineGroup.getClipPath();\r\n\r\n      if (oldClipPath) {\r\n        var newClipPath = createLineClipPath(this, coordSys, false, seriesModel);\r\n        graphic.initProps(oldClipPath, {\r\n          shape: newClipPath.shape\r\n        }, seriesModel);\r\n      } else {\r\n        lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\r\n      } // Always update, or it is wrong in the case turning on legend\r\n      // because points are not changed.\r\n\r\n\r\n      showSymbol && symbolDraw.updateData(data, {\r\n        isIgnore: isIgnoreFunc,\r\n        clipShape: clipShapeForSymbol,\r\n        disableAnimation: true,\r\n        getSymbolPoint: function (idx) {\r\n          return [points[idx * 2], points[idx * 2 + 1]];\r\n        }\r\n      }); // In the case data zoom triggered refreshing frequently\r\n      // Data may not change if line has a category axis. So it should animate nothing.\r\n\r\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\r\n        if (hasAnimation) {\r\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls);\r\n        } else {\r\n          // Not do it in update with animation\r\n          if (step) {\r\n            // TODO If stacked series is not step\r\n            points = turnPointsIntoStep(points, coordSys, step, connectNulls);\r\n\r\n            if (stackedOnPoints) {\r\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\r\n            }\r\n          }\r\n\r\n          polyline.setShape({\r\n            points: points\r\n          });\r\n          polygon && polygon.setShape({\r\n            points: points,\r\n            stackedOnPoints: stackedOnPoints\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    var emphasisModel = seriesModel.getModel('emphasis');\r\n    var focus = emphasisModel.get('focus');\r\n    var blurScope = emphasisModel.get('blurScope');\r\n    var emphasisDisabled = emphasisModel.get('disabled');\r\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\r\n    lineStyleModel.getLineStyle(), {\r\n      fill: 'none',\r\n      stroke: visualColor,\r\n      lineJoin: 'bevel'\r\n    }));\r\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\r\n\r\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\r\n      var emphasisLineStyle = polyline.getState('emphasis').style;\r\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\r\n    } // Needs seriesIndex for focus\r\n\r\n\r\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\r\n    toggleHoverEmphasis(polyline, focus, blurScope, emphasisDisabled);\r\n    var smooth = getSmooth(seriesModel.get('smooth'));\r\n    var smoothMonotone = seriesModel.get('smoothMonotone');\r\n    polyline.setShape({\r\n      smooth: smooth,\r\n      smoothMonotone: smoothMonotone,\r\n      connectNulls: connectNulls\r\n    });\r\n\r\n    if (polygon) {\r\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\r\n      var stackedOnSmooth = 0;\r\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\r\n        fill: visualColor,\r\n        opacity: 0.7,\r\n        lineJoin: 'bevel',\r\n        decal: data.getVisual('style').decal\r\n      }));\r\n\r\n      if (stackedOnSeries) {\r\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\r\n      }\r\n\r\n      polygon.setShape({\r\n        smooth: smooth,\r\n        stackedOnSmooth: stackedOnSmooth,\r\n        smoothMonotone: smoothMonotone,\r\n        connectNulls: connectNulls\r\n      });\r\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle'); // Needs seriesIndex for focus\r\n\r\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\r\n      toggleHoverEmphasis(polygon, focus, blurScope, emphasisDisabled);\r\n    }\r\n\r\n    var changePolyState = function (toState) {\r\n      _this._changePolyState(toState);\r\n    };\r\n\r\n    data.eachItemGraphicEl(function (el) {\r\n      // Switch polyline / polygon state if element changed its state.\r\n      el && (el.onHoverStateChange = changePolyState);\r\n    });\r\n    this._polyline.onHoverStateChange = changePolyState;\r\n    this._data = data; // Save the coordinate system for transition animation when data changed\r\n\r\n    this._coordSys = coordSys;\r\n    this._stackedOnPoints = stackedOnPoints;\r\n    this._points = points;\r\n    this._step = step;\r\n    this._valueOrigin = valueOrigin;\r\n\r\n    if (seriesModel.get('triggerLineEvent')) {\r\n      this.packEventData(seriesModel, polyline);\r\n      polygon && this.packEventData(seriesModel, polygon);\r\n    }\r\n  };\r\n\r\n  LineView.prototype.packEventData = function (seriesModel, el) {\r\n    getECData(el).eventData = {\r\n      componentType: 'series',\r\n      componentSubType: 'line',\r\n      componentIndex: seriesModel.componentIndex,\r\n      seriesIndex: seriesModel.seriesIndex,\r\n      seriesName: seriesModel.name,\r\n      seriesType: 'line'\r\n    };\r\n  };\r\n\r\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\r\n    var data = seriesModel.getData();\r\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\r\n\r\n    this._changePolyState('emphasis');\r\n\r\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\r\n      var points = data.getLayout('points');\r\n      var symbol = data.getItemGraphicEl(dataIndex);\r\n\r\n      if (!symbol) {\r\n        // Create a temporary symbol if it is not exists\r\n        var x = points[dataIndex * 2];\r\n        var y = points[dataIndex * 2 + 1];\r\n\r\n        if (isNaN(x) || isNaN(y)) {\r\n          // Null data\r\n          return;\r\n        } // fix #11360: shouldn't draw symbol outside clipShapeForSymbol\r\n\r\n\r\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\r\n          return;\r\n        }\r\n\r\n        var zlevel = seriesModel.get('zlevel') || 0;\r\n        var z = seriesModel.get('z') || 0;\r\n        symbol = new SymbolClz(data, dataIndex);\r\n        symbol.x = x;\r\n        symbol.y = y;\r\n        symbol.setZ(zlevel, z); // ensure label text of the temporary symbol is in front of line and area polygon\r\n\r\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\r\n\r\n        if (symbolLabel) {\r\n          symbolLabel.zlevel = zlevel;\r\n          symbolLabel.z = z;\r\n          symbolLabel.z2 = this._polyline.z2 + 1;\r\n        }\r\n\r\n        symbol.__temp = true;\r\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\r\n\r\n        symbol.stopSymbolAnimation(true);\r\n        this.group.add(symbol);\r\n      }\r\n\r\n      symbol.highlight();\r\n    } else {\r\n      // Highlight whole series\r\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\r\n    }\r\n  };\r\n\r\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\r\n    var data = seriesModel.getData();\r\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\r\n\r\n    this._changePolyState('normal');\r\n\r\n    if (dataIndex != null && dataIndex >= 0) {\r\n      var symbol = data.getItemGraphicEl(dataIndex);\r\n\r\n      if (symbol) {\r\n        if (symbol.__temp) {\r\n          data.setItemGraphicEl(dataIndex, null);\r\n          this.group.remove(symbol);\r\n        } else {\r\n          symbol.downplay();\r\n        }\r\n      }\r\n    } else {\r\n      // FIXME\r\n      // can not downplay completely.\r\n      // Downplay whole series\r\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\r\n    }\r\n  };\r\n\r\n  LineView.prototype._changePolyState = function (toState) {\r\n    var polygon = this._polygon;\r\n    setStatesFlag(this._polyline, toState);\r\n    polygon && setStatesFlag(polygon, toState);\r\n  };\r\n\r\n  LineView.prototype._newPolyline = function (points) {\r\n    var polyline = this._polyline; // Remove previous created polyline\r\n\r\n    if (polyline) {\r\n      this._lineGroup.remove(polyline);\r\n    }\r\n\r\n    polyline = new ECPolyline({\r\n      shape: {\r\n        points: points\r\n      },\r\n      segmentIgnoreThreshold: 2,\r\n      z2: 10\r\n    });\r\n\r\n    this._lineGroup.add(polyline);\r\n\r\n    this._polyline = polyline;\r\n    return polyline;\r\n  };\r\n\r\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\r\n    var polygon = this._polygon; // Remove previous created polygon\r\n\r\n    if (polygon) {\r\n      this._lineGroup.remove(polygon);\r\n    }\r\n\r\n    polygon = new ECPolygon({\r\n      shape: {\r\n        points: points,\r\n        stackedOnPoints: stackedOnPoints\r\n      },\r\n      segmentIgnoreThreshold: 2\r\n    });\r\n\r\n    this._lineGroup.add(polygon);\r\n\r\n    this._polygon = polygon;\r\n    return polygon;\r\n  };\r\n\r\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\r\n    var isHorizontalOrRadial;\r\n    var isCoordSysPolar;\r\n    var baseAxis = coordSys.getBaseAxis();\r\n    var isAxisInverse = baseAxis.inverse;\r\n\r\n    if (coordSys.type === 'cartesian2d') {\r\n      isHorizontalOrRadial = baseAxis.isHorizontal();\r\n      isCoordSysPolar = false;\r\n    } else if (coordSys.type === 'polar') {\r\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\r\n      isCoordSysPolar = true;\r\n    }\r\n\r\n    var seriesModel = data.hostModel;\r\n    var seriesDuration = seriesModel.get('animationDuration');\r\n\r\n    if (zrUtil.isFunction(seriesDuration)) {\r\n      seriesDuration = seriesDuration(null);\r\n    }\r\n\r\n    var seriesDelay = seriesModel.get('animationDelay') || 0;\r\n    var seriesDelayValue = zrUtil.isFunction(seriesDelay) ? seriesDelay(null) : seriesDelay;\r\n    data.eachItemGraphicEl(function (symbol, idx) {\r\n      var el = symbol;\r\n\r\n      if (el) {\r\n        var point = [symbol.x, symbol.y];\r\n        var start = void 0;\r\n        var end = void 0;\r\n        var current = void 0;\r\n\r\n        if (clipShape) {\r\n          if (isCoordSysPolar) {\r\n            var polarClip = clipShape;\r\n            var coord = coordSys.pointToCoord(point);\r\n\r\n            if (isHorizontalOrRadial) {\r\n              start = polarClip.startAngle;\r\n              end = polarClip.endAngle;\r\n              current = -coord[1] / 180 * Math.PI;\r\n            } else {\r\n              start = polarClip.r0;\r\n              end = polarClip.r;\r\n              current = coord[0];\r\n            }\r\n          } else {\r\n            var gridClip = clipShape;\r\n\r\n            if (isHorizontalOrRadial) {\r\n              start = gridClip.x;\r\n              end = gridClip.x + gridClip.width;\r\n              current = symbol.x;\r\n            } else {\r\n              start = gridClip.y + gridClip.height;\r\n              end = gridClip.y;\r\n              current = symbol.y;\r\n            }\r\n          }\r\n        }\r\n\r\n        var ratio = end === start ? 0 : (current - start) / (end - start);\r\n\r\n        if (isAxisInverse) {\r\n          ratio = 1 - ratio;\r\n        }\r\n\r\n        var delay = zrUtil.isFunction(seriesDelay) ? seriesDelay(idx) : seriesDuration * ratio + seriesDelayValue;\r\n        var symbolPath = el.getSymbolPath();\r\n        var text = symbolPath.getTextContent();\r\n        el.attr({\r\n          scaleX: 0,\r\n          scaleY: 0\r\n        });\r\n        el.animateTo({\r\n          scaleX: 1,\r\n          scaleY: 1\r\n        }, {\r\n          duration: 200,\r\n          setToFinal: true,\r\n          delay: delay\r\n        });\r\n\r\n        if (text) {\r\n          text.animateFrom({\r\n            style: {\r\n              opacity: 0\r\n            }\r\n          }, {\r\n            duration: 300,\r\n            delay: delay\r\n          });\r\n        }\r\n\r\n        symbolPath.disableLabelAnimation = true;\r\n      }\r\n    });\r\n  };\r\n\r\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\r\n    var endLabelModel = seriesModel.getModel('endLabel');\r\n\r\n    if (anyStateShowEndLabel(seriesModel)) {\r\n      var data_2 = seriesModel.getData();\r\n      var polyline = this._polyline; // series may be filtered.\r\n\r\n      var points = data_2.getLayout('points');\r\n\r\n      if (!points) {\r\n        polyline.removeTextContent();\r\n        this._endLabel = null;\r\n        return;\r\n      }\r\n\r\n      var endLabel = this._endLabel;\r\n\r\n      if (!endLabel) {\r\n        endLabel = this._endLabel = new graphic.Text({\r\n          z2: 200 // should be higher than item symbol\r\n\r\n        });\r\n        endLabel.ignoreClip = true;\r\n        polyline.setTextContent(this._endLabel);\r\n        polyline.disableLabelAnimation = true;\r\n      } // Find last non-NaN data to display data\r\n\r\n\r\n      var dataIndex = getLastIndexNotNull(points);\r\n\r\n      if (dataIndex >= 0) {\r\n        setLabelStyle(polyline, getLabelStatesModels(seriesModel, 'endLabel'), {\r\n          inheritColor: inheritColor,\r\n          labelFetcher: seriesModel,\r\n          labelDataIndex: dataIndex,\r\n          defaultText: function (dataIndex, opt, interpolatedValue) {\r\n            return interpolatedValue != null ? getDefaultInterpolatedLabel(data_2, interpolatedValue) : getDefaultLabel(data_2, dataIndex);\r\n          },\r\n          enableTextSetter: true\r\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\r\n        polyline.textConfig.position = null;\r\n      }\r\n    } else if (this._endLabel) {\r\n      this._polyline.removeTextContent();\r\n\r\n      this._endLabel = null;\r\n    }\r\n  };\r\n\r\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\r\n    var endLabel = this._endLabel;\r\n    var polyline = this._polyline;\r\n\r\n    if (endLabel) {\r\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\r\n      // The label is not prepared at this time.\r\n      if (percent < 1 && animationRecord.originalX == null) {\r\n        animationRecord.originalX = endLabel.x;\r\n        animationRecord.originalY = endLabel.y;\r\n      }\r\n\r\n      var points = data.getLayout('points');\r\n      var seriesModel = data.hostModel;\r\n      var connectNulls = seriesModel.get('connectNulls');\r\n      var precision = endLabelModel.get('precision');\r\n      var distance = endLabelModel.get('distance') || 0;\r\n      var baseAxis = coordSys.getBaseAxis();\r\n      var isHorizontal = baseAxis.isHorizontal();\r\n      var isBaseInversed = baseAxis.inverse;\r\n      var clipShape = clipRect.shape;\r\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\r\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\r\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\r\n      var dim = isHorizontal ? 'x' : 'y';\r\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\r\n      var indices = dataIndexRange.range;\r\n      var diff = indices[1] - indices[0];\r\n      var value = void 0;\r\n\r\n      if (diff >= 1) {\r\n        // diff > 1 && connectNulls, which is on the null data.\r\n        if (diff > 1 && !connectNulls) {\r\n          var pt = getPointAtIndex(points, indices[0]);\r\n          endLabel.attr({\r\n            x: pt[0] + distanceX,\r\n            y: pt[1] + distanceY\r\n          });\r\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\r\n        } else {\r\n          var pt = polyline.getPointOn(xOrY, dim);\r\n          pt && endLabel.attr({\r\n            x: pt[0] + distanceX,\r\n            y: pt[1] + distanceY\r\n          });\r\n          var startValue = seriesModel.getRawValue(indices[0]);\r\n          var endValue = seriesModel.getRawValue(indices[1]);\r\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\r\n        }\r\n\r\n        animationRecord.lastFrameIndex = indices[0];\r\n      } else {\r\n        // If diff <= 0, which is the range is not found(Include NaN)\r\n        // Choose the first point or last point.\r\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\r\n        var pt = getPointAtIndex(points, idx);\r\n        valueAnimation && (value = seriesModel.getRawValue(idx));\r\n        endLabel.attr({\r\n          x: pt[0] + distanceX,\r\n          y: pt[1] + distanceY\r\n        });\r\n      }\r\n\r\n      if (valueAnimation) {\r\n        labelInner(endLabel).setLabelText(value);\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n  // FIXME Two value axis\r\n\r\n\r\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls) {\r\n    var polyline = this._polyline;\r\n    var polygon = this._polygon;\r\n    var seriesModel = data.hostModel;\r\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\r\n    var current = diff.current;\r\n    var stackedOnCurrent = diff.stackedOnCurrent;\r\n    var next = diff.next;\r\n    var stackedOnNext = diff.stackedOnNext;\r\n\r\n    if (step) {\r\n      // TODO If stacked series is not step\r\n      current = turnPointsIntoStep(diff.current, coordSys, step, connectNulls);\r\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step, connectNulls);\r\n      next = turnPointsIntoStep(diff.next, coordSys, step, connectNulls);\r\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step, connectNulls);\r\n    } // Don't apply animation if diff is large.\r\n    // For better result and avoid memory explosion problems like\r\n    // https://github.com/apache/incubator-echarts/issues/12229\r\n\r\n\r\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\r\n      polyline.stopAnimation();\r\n      polyline.setShape({\r\n        points: next\r\n      });\r\n\r\n      if (polygon) {\r\n        polygon.stopAnimation();\r\n        polygon.setShape({\r\n          points: next,\r\n          stackedOnPoints: stackedOnNext\r\n        });\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    polyline.shape.__points = diff.current;\r\n    polyline.shape.points = current;\r\n    var target = {\r\n      shape: {\r\n        points: next\r\n      }\r\n    }; // Also animate the original points.\r\n    // If points reference is changed when turning into step line.\r\n\r\n    if (diff.current !== current) {\r\n      target.shape.__points = diff.next;\r\n    } // Stop previous animation.\r\n\r\n\r\n    polyline.stopAnimation();\r\n    graphic.updateProps(polyline, target, seriesModel);\r\n\r\n    if (polygon) {\r\n      polygon.setShape({\r\n        // Reuse the points with polyline.\r\n        points: current,\r\n        stackedOnPoints: stackedOnCurrent\r\n      });\r\n      polygon.stopAnimation();\r\n      graphic.updateProps(polygon, {\r\n        shape: {\r\n          stackedOnPoints: stackedOnNext\r\n        }\r\n      }, seriesModel); // If use attr directly in updateProps.\r\n\r\n      if (polyline.shape.points !== polygon.shape.points) {\r\n        polygon.shape.points = polyline.shape.points;\r\n      }\r\n    }\r\n\r\n    var updatedDataInfo = [];\r\n    var diffStatus = diff.status;\r\n\r\n    for (var i = 0; i < diffStatus.length; i++) {\r\n      var cmd = diffStatus[i].cmd;\r\n\r\n      if (cmd === '=') {\r\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\r\n\r\n        if (el) {\r\n          updatedDataInfo.push({\r\n            el: el,\r\n            ptIdx: i // Index of points\r\n\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (polyline.animators && polyline.animators.length) {\r\n      polyline.animators[0].during(function () {\r\n        polygon && polygon.dirtyShape();\r\n        var points = polyline.shape.__points;\r\n\r\n        for (var i = 0; i < updatedDataInfo.length; i++) {\r\n          var el = updatedDataInfo[i].el;\r\n          var offset = updatedDataInfo[i].ptIdx * 2;\r\n          el.x = points[offset];\r\n          el.y = points[offset + 1];\r\n          el.markRedraw();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  LineView.prototype.remove = function (ecModel) {\r\n    var group = this.group;\r\n    var oldData = this._data;\r\n\r\n    this._lineGroup.removeAll();\r\n\r\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\r\n\r\n\r\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\r\n      if (el.__temp) {\r\n        group.remove(el);\r\n        oldData.setItemGraphicEl(idx, null);\r\n      }\r\n    });\r\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\r\n  };\r\n\r\n  LineView.type = 'line';\r\n  return LineView;\r\n}(ChartView);\r\n\r\nexport default LineView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { map } from 'zrender/lib/core/util.js';\r\nimport createRenderPlanner from '../chart/helper/createRenderPlanner.js';\r\nimport { isDimensionStacked } from '../data/helper/dataStackHelper.js';\r\nimport { createFloat32Array } from '../util/vendor.js';\r\nexport default function pointsLayout(seriesType, forceStoreInTypedArray) {\r\n  return {\r\n    seriesType: seriesType,\r\n    plan: createRenderPlanner(),\r\n    reset: function (seriesModel) {\r\n      var data = seriesModel.getData();\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      var pipelineContext = seriesModel.pipelineContext;\r\n      var useTypedArray = forceStoreInTypedArray || pipelineContext.large;\r\n\r\n      if (!coordSys) {\r\n        return;\r\n      }\r\n\r\n      var dims = map(coordSys.dimensions, function (dim) {\r\n        return data.mapDimension(dim);\r\n      }).slice(0, 2);\r\n      var dimLen = dims.length;\r\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\r\n\r\n      if (isDimensionStacked(data, dims[0])) {\r\n        dims[0] = stackResultDim;\r\n      }\r\n\r\n      if (isDimensionStacked(data, dims[1])) {\r\n        dims[1] = stackResultDim;\r\n      }\r\n\r\n      var store = data.getStore();\r\n      var dimIdx0 = data.getDimensionIndex(dims[0]);\r\n      var dimIdx1 = data.getDimensionIndex(dims[1]);\r\n      return dimLen && {\r\n        progress: function (params, data) {\r\n          var segCount = params.end - params.start;\r\n          var points = useTypedArray && createFloat32Array(segCount * dimLen);\r\n          var tmpIn = [];\r\n          var tmpOut = [];\r\n\r\n          for (var i = params.start, offset = 0; i < params.end; i++) {\r\n            var point = void 0;\r\n\r\n            if (dimLen === 1) {\r\n              var x = store.get(dimIdx0, i); // NOTE: Make sure the second parameter is null to use default strategy.\r\n\r\n              point = coordSys.dataToPoint(x, null, tmpOut);\r\n            } else {\r\n              tmpIn[0] = store.get(dimIdx0, i);\r\n              tmpIn[1] = store.get(dimIdx1, i); // Let coordinate system to handle the NaN data.\r\n\r\n              point = coordSys.dataToPoint(tmpIn, null, tmpOut);\r\n            }\r\n\r\n            if (useTypedArray) {\r\n              points[offset++] = point[0];\r\n              points[offset++] = point[1];\r\n            } else {\r\n              data.setItemLayout(i, point.slice());\r\n            }\r\n          }\r\n\r\n          useTypedArray && data.setLayout('points', points);\r\n        }\r\n      };\r\n    }\r\n  };\r\n}\r\n;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { isFunction, isString } from 'zrender/lib/core/util.js';\r\nvar samplers = {\r\n  average: function (frame) {\r\n    var sum = 0;\r\n    var count = 0;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      if (!isNaN(frame[i])) {\r\n        sum += frame[i];\r\n        count++;\r\n      }\r\n    } // Return NaN if count is 0\r\n\r\n\r\n    return count === 0 ? NaN : sum / count;\r\n  },\r\n  sum: function (frame) {\r\n    var sum = 0;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      // Ignore NaN\r\n      sum += frame[i] || 0;\r\n    }\r\n\r\n    return sum;\r\n  },\r\n  max: function (frame) {\r\n    var max = -Infinity;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      frame[i] > max && (max = frame[i]);\r\n    } // NaN will cause illegal axis extent.\r\n\r\n\r\n    return isFinite(max) ? max : NaN;\r\n  },\r\n  min: function (frame) {\r\n    var min = Infinity;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      frame[i] < min && (min = frame[i]);\r\n    } // NaN will cause illegal axis extent.\r\n\r\n\r\n    return isFinite(min) ? min : NaN;\r\n  },\r\n  // TODO\r\n  // Median\r\n  nearest: function (frame) {\r\n    return frame[0];\r\n  }\r\n};\r\n\r\nvar indexSampler = function (frame) {\r\n  return Math.round(frame.length / 2);\r\n};\r\n\r\nexport default function dataSample(seriesType) {\r\n  return {\r\n    seriesType: seriesType,\r\n    // FIXME:TS never used, so comment it\r\n    // modifyOutputEnd: true,\r\n    reset: function (seriesModel, ecModel, api) {\r\n      var data = seriesModel.getData();\r\n      var sampling = seriesModel.get('sampling');\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      var count = data.count(); // Only cartesian2d support down sampling. Disable it when there is few data.\r\n\r\n      if (count > 10 && coordSys.type === 'cartesian2d' && sampling) {\r\n        var baseAxis = coordSys.getBaseAxis();\r\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n        var extent = baseAxis.getExtent();\r\n        var dpr = api.getDevicePixelRatio(); // Coordinste system has been resized\r\n\r\n        var size = Math.abs(extent[1] - extent[0]) * (dpr || 1);\r\n        var rate = Math.round(count / size);\r\n\r\n        if (isFinite(rate) && rate > 1) {\r\n          if (sampling === 'lttb') {\r\n            seriesModel.setData(data.lttbDownSample(data.mapDimension(valueAxis.dim), 1 / rate));\r\n          }\r\n\r\n          var sampler = void 0;\r\n\r\n          if (isString(sampling)) {\r\n            sampler = samplers[sampling];\r\n          } else if (isFunction(sampling)) {\r\n            sampler = sampling;\r\n          }\r\n\r\n          if (sampler) {\r\n            // Only support sample the first dim mapped from value axis.\r\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport LineSeries from './LineSeries.js';\r\nimport LineView from './LineView.js'; // In case developer forget to include grid component\r\n\r\nimport layoutPoints from '../../layout/points.js';\r\nimport dataSample from '../../processor/dataSample.js';\r\nexport function install(registers) {\r\n  registers.registerChartView(LineView);\r\n  registers.registerSeriesModel(LineSeries);\r\n  registers.registerLayout(layoutPoints('line', true));\r\n  registers.registerVisual({\r\n    seriesType: 'line',\r\n    reset: function (seriesModel) {\r\n      var data = seriesModel.getData(); // Visual coding for legend\r\n\r\n      var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\r\n\r\n      if (lineStyle && !lineStyle.stroke) {\r\n        // Fill in visual should be palette color if\r\n        // has color callback\r\n        lineStyle.stroke = data.getVisual('style').fill;\r\n      }\r\n\r\n      data.setVisual('legendLineStyle', lineStyle);\r\n    }\r\n  }); // Down sample after filter\r\n\r\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\r\n}"],
  "mappings": "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",
  "names": ["LineSeriesModel", "ECPolylineShape", "ECPolyline", "ECPolygonShape", "ECPolygon", "isPointNull", "LineView", "dataIndex", "i", "el", "data"]
}
